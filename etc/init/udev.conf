# udev - device node and kernel event manager
#
# The udev daemon receives events from the kernel about changes in the
# /sys filesystem and manages the /dev filesystem.

description	"device node and kernel event manager"

start on startup
stop on runlevel [06]

expect fork
respawn

pre-start script
. /lib/lsb/init-functions

if [ -e "/dev/.udev/" ]; then
  if mountpoint -q /dev/; then
    TMPFS_MOUNTED=1
  else
    logger -t udev ".udev already exists on the /dev!"
  fi
fi

if [ -z "$TMPFS_MOUNTED" ]; then
    if mountpoint -q /dev/pts/; then
      umount -n -l /dev/pts/
    fi

    if mountpoint -q /dev/shm/; then
      umount -n -l /dev/shm/
    fi
    
    if ! grep -E -q "^[^[:space:]]+ /dev (dev)?devtmpfs" /proc/mounts; then
      mount -n -o size=2M,mode=0755 -t devtmpfs devtmpfs /dev
    fi

    [ -d /proc/1 ] || mount -n /proc
else
    # and clean up the database of the initramfs udev
    rm -rf /dev/.udev/
fi

/lib/udev/create_static_nodes || true
logger -t udev "Starting the hotplug events dispatcher udevd"

if mountpoint -q /dev/; then
    initctl emit --no-wait mounted MOUNTPOINT=/dev TYPE=tmpfs
fi

mount -n -o size=1M,mode=0755 -t tmpfs tmpfs /var/run
mkdir /var/run/shm
mount -n -o rw,nosuid,nodev,noexec,relatime -t tmpfs tmpfs /var/run/shm
#touch /var/run/utmp
initctl emit --no-wait mounted MOUNTPOINT=/var/run TYPE=tmpfs
end script

post-start script
mkdir -p /dev/.udev/rules.d
if  [ ! -e /dev/.udev/rules.d/61-dev-root-link.rules ]; then
  eval $(udevadm info --export --export-prefix=ROOT_ --device-id-of-file=/ \
    || true)
  if [ "$ROOT_MAJOR" -a "$ROOT_MINOR" ]; then
    echo 'ACTION=="add|change", SUBSYSTEM=="block", ENV{MAJOR}=="'$ROOT_MAJOR'", ENV{MINOR}=="'$ROOT_MINOR'", SYMLINK+="root"' > /dev/.udev/root-link-rule
    mv /dev/.udev/root-link-rule /dev/.udev/rules.d/61-dev-root-link.rules
  fi
fi
end script

exec udevd --daemon
